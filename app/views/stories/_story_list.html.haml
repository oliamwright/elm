= render :partial => 'stories/action_buttons'
.dialog#question_dialog{:title => 'Ask Question', :style => 'display: none;'}
	= semantic_form_for(Question.new) do |f|
		= f.inputs do
			= f.input :questionable_id, :value => '', :as => :hidden
			= f.input :questionable_type, :value => '', :as => :hidden
			= f.input :body, :label => false
.dialog#answer_dialog{:title => 'Answer', :style => 'display: none;'}
	#question_body
	= semantic_form_for(Answer.new) do |f|
		= f.inputs do
			= f.input :question_id, :value => '', :as => :hidden
			= f.input :body, :label => false
:javascript
	$('#question_dialog').dialog({
		autoOpen: false,
		width: 500,
		height: 150,
		modal: true,
		buttons: {
			"Ask Question": function() {
				alert('ask that bitch!');
				$(this).dialog('close');
			},
			Cancel: function() {
				$(this).dialog('close');
			}
		},
		close: function() {
		}
	});
	$('#answer_dialog').dialog({
		autoOpen: false,
		width: 500,
		height: 150,
		modal: true,
		buttons: {
			"Answer Question": function() {
				alert('answer that bitch!');
				$(this).dialog('close');
			},
			Cancel: function() {
				$(this).dialog('close');
			}
		},
		close: function() {
		}
	});
.story_list.in_progress
	.title= "IN PROGRESS"
	.filter_checkboxes
		.checkbox.show_completed_tasks
			.label
				= "show completed tasks?"
			.check
				= check_box_tag :show_completed_tasks, "yes", true
		.checkbox.show_ignored
			.label
				= "show ignored tasks?"
			.check
				= check_box_tag :show_ignored, "yes", true
		.checkbox.show_hidden
			.label
				= "show completed user stories?"
			.check
				= check_box_tag :show_completed, "yes", true
	:javascript
		$('.checkbox input[name="show_ignored"]').click(function() {
			var ch = $(this).attr('checked') == 'checked';
			if (ch) {
				$('.status_ignored').show();
			} else {
				$('.status_ignored').hide();
			}
		});
		$('.checkbox input[name="show_completed"]').click(function() {
			var ch = $(this).attr('checked') == 'checked';
			if (ch) {
				$('.story.status_completed').show();
				$('.story.status_completed').next('.tasks').show();
			} else {
				$('.story.status_completed').hide();
				$('.story.status_completed').next('.tasks').hide();
			}
		});
		$('.checkbox input[name="show_completed_tasks"]').click(function() {
			var ch = $(this).attr('checked') == 'checked';
			if (ch) {
				$('.item.is_completed').show();
			} else {
				$('.item.is_completed').hide();
			}
		});
	.header
		.field.pull
		.field.check{:'data-class' => 'story', :'data-id' => 'all'}= check_box_tag :sel
		.field.status= "STATUS"
		.field.usid
			%span.usid= "US ID"
			%span.taskid{:style => 'display: none;'}= "TASK ID"
		.field.value= "VALUE"
		.field.details= "USER STORY"
		.field.est_time= "EST. TIME"
		.field.tasks= "TASKS"
		.field.bugs= "BUGS"
		.field.act_time= "ACTUAL TIME"
		.field.created_by= "CREATED BY"
		.field.created_at= "CREATED"
		.field.approved_by= "APPROVED BY"
		.field.approved_at= "APPROVED"
		.field.completed_at= "COMPLETED"
		.field.push
	.stories
		= render(:partial => 'stories/story', :collection => stories)
:javascript
	$('.header .field.usid').click(function() {
		$('.field.usid span.usid').toggle();
		$('.field.usid span.taskid').toggle();
	});

	$('.check input[name="sel"]').click(function() {
		var ch = $(this).attr('checked') == 'checked';
		var cl = $(this).parent().attr('data-class');
		var id = $(this).parent().attr('data-id');
		if (cl == 'sub_item' && id == 'all') {
			$(this).closest('.tasks').find('.item .check input[name="sel"]').attr('checked', ch);
		} else if (cl == 'story' && id == 'all') {
			$('input[name="sel"]').attr('checked', ch);
		} else if (cl == 'story') {
			$(this).closest('.story').next('.tasks').find('.check input[name="sel"]').attr('checked', ch);
		}
		update_buttons();
	});

	function update_buttons() {
		if ($('input[name="sel"]:checked').length > 0) {
			$('.action_buttons .button').removeClass('disabled');
		} else {
			$('.action_buttons .button').addClass('disabled');
		}
	};

	$('.action_buttons .button').addClass('disabled');
	$('.action_buttons .button').click(function() {
		if ($(this).hasClass('disabled')) {
			// do nothing
		} else {
			var act = $(this).attr('data-action');
			var vals = [];
			$('input[name="sel"]:checked').each(function() {
				var container = $(this).closest('.check');
				var cl = container.attr('data-class');
				var id = container.attr('data-id');
				if (id != 'all' && cl == 'sub_item') {
					vals.push(container.attr('data-id'));
				}
			});
			do_action(act, vals.join(','));
		}
	});

	$('.push_button').click(function() {
		var container = $(this).parents('.story');
		var sid = container.attr('data-id');
		$.ajax({
			async: true,
			cache: false,
			url: '/stories/' + sid + '/push',
			type: 'post',
			headers: {
				'X-CSRF-Token': '#{form_authenticity_token.to_s}'
			},
			success: function(data) {
				container.next('.tasks').remove();
				container.html(data);
			}
		});
	});
	$('.pull_button').click(function() {
		var container = $(this).parents('.story');
		var sid = container.attr('data-id');
		$.ajax({
			async: true,
			cache: false,
			url: '/stories/' + sid + '/pull',
			type: 'post',
			headers: {
				'X-CSRF-Token': '#{form_authenticity_token.to_s}'
			},
			success: function(data) {
				container.next('.tasks').remove();
				container.html(data);
			}
		});
	});

	function do_action(action, idstring) {
		$.ajax({
			async: true,
			url: '/sub_items/do_action?si_action=' + action + '&ids=' + idstring,
			headers: {
				'X-CSRF-Token': '#{form_authenticity_token.to_s}'
			},
			type: 'post',
			cache: false,
			success: function(data) {
				window.location = window.location;
			}
		});
	};
